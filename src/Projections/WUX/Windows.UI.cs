//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 0.0.0-private.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Windows.UI
{
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.UI.Colors))]
    [global::WinRT.ProjectedRuntimeClass(typeof(IColors))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class Colors : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Colors>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_UI_IColors => _inner;
        private IColors _default => null;

        public static I As<I>() => ActivationFactory<Colors>.AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_UI_IColorsStatics;
        private static IObjectReference Make___objRef_global__Windows_UI_IColorsStatics()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_UI_IColorsStatics, ActivationFactory<Colors>.As(GuidGenerator.GetIID(typeof(IColorsStatics).GetHelperType())), null);
            return ___objRef_global__Windows_UI_IColorsStatics;
        }
        private static IObjectReference _objRef_global__Windows_UI_IColorsStatics => ___objRef_global__Windows_UI_IColorsStatics ?? Make___objRef_global__Windows_UI_IColorsStatics();



        public static Color AliceBlue => global::ABI.Windows.UI.IColorsStaticsMethods.get_AliceBlue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color AntiqueWhite => global::ABI.Windows.UI.IColorsStaticsMethods.get_AntiqueWhite(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Aqua => global::ABI.Windows.UI.IColorsStaticsMethods.get_Aqua(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Aquamarine => global::ABI.Windows.UI.IColorsStaticsMethods.get_Aquamarine(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Azure => global::ABI.Windows.UI.IColorsStaticsMethods.get_Azure(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Beige => global::ABI.Windows.UI.IColorsStaticsMethods.get_Beige(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Bisque => global::ABI.Windows.UI.IColorsStaticsMethods.get_Bisque(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Black => global::ABI.Windows.UI.IColorsStaticsMethods.get_Black(_objRef_global__Windows_UI_IColorsStatics);

        public static Color BlanchedAlmond => global::ABI.Windows.UI.IColorsStaticsMethods.get_BlanchedAlmond(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Blue => global::ABI.Windows.UI.IColorsStaticsMethods.get_Blue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color BlueViolet => global::ABI.Windows.UI.IColorsStaticsMethods.get_BlueViolet(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Brown => global::ABI.Windows.UI.IColorsStaticsMethods.get_Brown(_objRef_global__Windows_UI_IColorsStatics);

        public static Color BurlyWood => global::ABI.Windows.UI.IColorsStaticsMethods.get_BurlyWood(_objRef_global__Windows_UI_IColorsStatics);

        public static Color CadetBlue => global::ABI.Windows.UI.IColorsStaticsMethods.get_CadetBlue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Chartreuse => global::ABI.Windows.UI.IColorsStaticsMethods.get_Chartreuse(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Chocolate => global::ABI.Windows.UI.IColorsStaticsMethods.get_Chocolate(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Coral => global::ABI.Windows.UI.IColorsStaticsMethods.get_Coral(_objRef_global__Windows_UI_IColorsStatics);

        public static Color CornflowerBlue => global::ABI.Windows.UI.IColorsStaticsMethods.get_CornflowerBlue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Cornsilk => global::ABI.Windows.UI.IColorsStaticsMethods.get_Cornsilk(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Crimson => global::ABI.Windows.UI.IColorsStaticsMethods.get_Crimson(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Cyan => global::ABI.Windows.UI.IColorsStaticsMethods.get_Cyan(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DarkBlue => global::ABI.Windows.UI.IColorsStaticsMethods.get_DarkBlue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DarkCyan => global::ABI.Windows.UI.IColorsStaticsMethods.get_DarkCyan(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DarkGoldenrod => global::ABI.Windows.UI.IColorsStaticsMethods.get_DarkGoldenrod(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DarkGray => global::ABI.Windows.UI.IColorsStaticsMethods.get_DarkGray(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DarkGreen => global::ABI.Windows.UI.IColorsStaticsMethods.get_DarkGreen(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DarkKhaki => global::ABI.Windows.UI.IColorsStaticsMethods.get_DarkKhaki(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DarkMagenta => global::ABI.Windows.UI.IColorsStaticsMethods.get_DarkMagenta(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DarkOliveGreen => global::ABI.Windows.UI.IColorsStaticsMethods.get_DarkOliveGreen(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DarkOrange => global::ABI.Windows.UI.IColorsStaticsMethods.get_DarkOrange(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DarkOrchid => global::ABI.Windows.UI.IColorsStaticsMethods.get_DarkOrchid(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DarkRed => global::ABI.Windows.UI.IColorsStaticsMethods.get_DarkRed(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DarkSalmon => global::ABI.Windows.UI.IColorsStaticsMethods.get_DarkSalmon(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DarkSeaGreen => global::ABI.Windows.UI.IColorsStaticsMethods.get_DarkSeaGreen(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DarkSlateBlue => global::ABI.Windows.UI.IColorsStaticsMethods.get_DarkSlateBlue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DarkSlateGray => global::ABI.Windows.UI.IColorsStaticsMethods.get_DarkSlateGray(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DarkTurquoise => global::ABI.Windows.UI.IColorsStaticsMethods.get_DarkTurquoise(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DarkViolet => global::ABI.Windows.UI.IColorsStaticsMethods.get_DarkViolet(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DeepPink => global::ABI.Windows.UI.IColorsStaticsMethods.get_DeepPink(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DeepSkyBlue => global::ABI.Windows.UI.IColorsStaticsMethods.get_DeepSkyBlue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DimGray => global::ABI.Windows.UI.IColorsStaticsMethods.get_DimGray(_objRef_global__Windows_UI_IColorsStatics);

        public static Color DodgerBlue => global::ABI.Windows.UI.IColorsStaticsMethods.get_DodgerBlue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Firebrick => global::ABI.Windows.UI.IColorsStaticsMethods.get_Firebrick(_objRef_global__Windows_UI_IColorsStatics);

        public static Color FloralWhite => global::ABI.Windows.UI.IColorsStaticsMethods.get_FloralWhite(_objRef_global__Windows_UI_IColorsStatics);

        public static Color ForestGreen => global::ABI.Windows.UI.IColorsStaticsMethods.get_ForestGreen(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Fuchsia => global::ABI.Windows.UI.IColorsStaticsMethods.get_Fuchsia(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Gainsboro => global::ABI.Windows.UI.IColorsStaticsMethods.get_Gainsboro(_objRef_global__Windows_UI_IColorsStatics);

        public static Color GhostWhite => global::ABI.Windows.UI.IColorsStaticsMethods.get_GhostWhite(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Gold => global::ABI.Windows.UI.IColorsStaticsMethods.get_Gold(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Goldenrod => global::ABI.Windows.UI.IColorsStaticsMethods.get_Goldenrod(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Gray => global::ABI.Windows.UI.IColorsStaticsMethods.get_Gray(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Green => global::ABI.Windows.UI.IColorsStaticsMethods.get_Green(_objRef_global__Windows_UI_IColorsStatics);

        public static Color GreenYellow => global::ABI.Windows.UI.IColorsStaticsMethods.get_GreenYellow(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Honeydew => global::ABI.Windows.UI.IColorsStaticsMethods.get_Honeydew(_objRef_global__Windows_UI_IColorsStatics);

        public static Color HotPink => global::ABI.Windows.UI.IColorsStaticsMethods.get_HotPink(_objRef_global__Windows_UI_IColorsStatics);

        public static Color IndianRed => global::ABI.Windows.UI.IColorsStaticsMethods.get_IndianRed(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Indigo => global::ABI.Windows.UI.IColorsStaticsMethods.get_Indigo(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Ivory => global::ABI.Windows.UI.IColorsStaticsMethods.get_Ivory(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Khaki => global::ABI.Windows.UI.IColorsStaticsMethods.get_Khaki(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Lavender => global::ABI.Windows.UI.IColorsStaticsMethods.get_Lavender(_objRef_global__Windows_UI_IColorsStatics);

        public static Color LavenderBlush => global::ABI.Windows.UI.IColorsStaticsMethods.get_LavenderBlush(_objRef_global__Windows_UI_IColorsStatics);

        public static Color LawnGreen => global::ABI.Windows.UI.IColorsStaticsMethods.get_LawnGreen(_objRef_global__Windows_UI_IColorsStatics);

        public static Color LemonChiffon => global::ABI.Windows.UI.IColorsStaticsMethods.get_LemonChiffon(_objRef_global__Windows_UI_IColorsStatics);

        public static Color LightBlue => global::ABI.Windows.UI.IColorsStaticsMethods.get_LightBlue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color LightCoral => global::ABI.Windows.UI.IColorsStaticsMethods.get_LightCoral(_objRef_global__Windows_UI_IColorsStatics);

        public static Color LightCyan => global::ABI.Windows.UI.IColorsStaticsMethods.get_LightCyan(_objRef_global__Windows_UI_IColorsStatics);

        public static Color LightGoldenrodYellow => global::ABI.Windows.UI.IColorsStaticsMethods.get_LightGoldenrodYellow(_objRef_global__Windows_UI_IColorsStatics);

        public static Color LightGray => global::ABI.Windows.UI.IColorsStaticsMethods.get_LightGray(_objRef_global__Windows_UI_IColorsStatics);

        public static Color LightGreen => global::ABI.Windows.UI.IColorsStaticsMethods.get_LightGreen(_objRef_global__Windows_UI_IColorsStatics);

        public static Color LightPink => global::ABI.Windows.UI.IColorsStaticsMethods.get_LightPink(_objRef_global__Windows_UI_IColorsStatics);

        public static Color LightSalmon => global::ABI.Windows.UI.IColorsStaticsMethods.get_LightSalmon(_objRef_global__Windows_UI_IColorsStatics);

        public static Color LightSeaGreen => global::ABI.Windows.UI.IColorsStaticsMethods.get_LightSeaGreen(_objRef_global__Windows_UI_IColorsStatics);

        public static Color LightSkyBlue => global::ABI.Windows.UI.IColorsStaticsMethods.get_LightSkyBlue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color LightSlateGray => global::ABI.Windows.UI.IColorsStaticsMethods.get_LightSlateGray(_objRef_global__Windows_UI_IColorsStatics);

        public static Color LightSteelBlue => global::ABI.Windows.UI.IColorsStaticsMethods.get_LightSteelBlue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color LightYellow => global::ABI.Windows.UI.IColorsStaticsMethods.get_LightYellow(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Lime => global::ABI.Windows.UI.IColorsStaticsMethods.get_Lime(_objRef_global__Windows_UI_IColorsStatics);

        public static Color LimeGreen => global::ABI.Windows.UI.IColorsStaticsMethods.get_LimeGreen(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Linen => global::ABI.Windows.UI.IColorsStaticsMethods.get_Linen(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Magenta => global::ABI.Windows.UI.IColorsStaticsMethods.get_Magenta(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Maroon => global::ABI.Windows.UI.IColorsStaticsMethods.get_Maroon(_objRef_global__Windows_UI_IColorsStatics);

        public static Color MediumAquamarine => global::ABI.Windows.UI.IColorsStaticsMethods.get_MediumAquamarine(_objRef_global__Windows_UI_IColorsStatics);

        public static Color MediumBlue => global::ABI.Windows.UI.IColorsStaticsMethods.get_MediumBlue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color MediumOrchid => global::ABI.Windows.UI.IColorsStaticsMethods.get_MediumOrchid(_objRef_global__Windows_UI_IColorsStatics);

        public static Color MediumPurple => global::ABI.Windows.UI.IColorsStaticsMethods.get_MediumPurple(_objRef_global__Windows_UI_IColorsStatics);

        public static Color MediumSeaGreen => global::ABI.Windows.UI.IColorsStaticsMethods.get_MediumSeaGreen(_objRef_global__Windows_UI_IColorsStatics);

        public static Color MediumSlateBlue => global::ABI.Windows.UI.IColorsStaticsMethods.get_MediumSlateBlue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color MediumSpringGreen => global::ABI.Windows.UI.IColorsStaticsMethods.get_MediumSpringGreen(_objRef_global__Windows_UI_IColorsStatics);

        public static Color MediumTurquoise => global::ABI.Windows.UI.IColorsStaticsMethods.get_MediumTurquoise(_objRef_global__Windows_UI_IColorsStatics);

        public static Color MediumVioletRed => global::ABI.Windows.UI.IColorsStaticsMethods.get_MediumVioletRed(_objRef_global__Windows_UI_IColorsStatics);

        public static Color MidnightBlue => global::ABI.Windows.UI.IColorsStaticsMethods.get_MidnightBlue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color MintCream => global::ABI.Windows.UI.IColorsStaticsMethods.get_MintCream(_objRef_global__Windows_UI_IColorsStatics);

        public static Color MistyRose => global::ABI.Windows.UI.IColorsStaticsMethods.get_MistyRose(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Moccasin => global::ABI.Windows.UI.IColorsStaticsMethods.get_Moccasin(_objRef_global__Windows_UI_IColorsStatics);

        public static Color NavajoWhite => global::ABI.Windows.UI.IColorsStaticsMethods.get_NavajoWhite(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Navy => global::ABI.Windows.UI.IColorsStaticsMethods.get_Navy(_objRef_global__Windows_UI_IColorsStatics);

        public static Color OldLace => global::ABI.Windows.UI.IColorsStaticsMethods.get_OldLace(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Olive => global::ABI.Windows.UI.IColorsStaticsMethods.get_Olive(_objRef_global__Windows_UI_IColorsStatics);

        public static Color OliveDrab => global::ABI.Windows.UI.IColorsStaticsMethods.get_OliveDrab(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Orange => global::ABI.Windows.UI.IColorsStaticsMethods.get_Orange(_objRef_global__Windows_UI_IColorsStatics);

        public static Color OrangeRed => global::ABI.Windows.UI.IColorsStaticsMethods.get_OrangeRed(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Orchid => global::ABI.Windows.UI.IColorsStaticsMethods.get_Orchid(_objRef_global__Windows_UI_IColorsStatics);

        public static Color PaleGoldenrod => global::ABI.Windows.UI.IColorsStaticsMethods.get_PaleGoldenrod(_objRef_global__Windows_UI_IColorsStatics);

        public static Color PaleGreen => global::ABI.Windows.UI.IColorsStaticsMethods.get_PaleGreen(_objRef_global__Windows_UI_IColorsStatics);

        public static Color PaleTurquoise => global::ABI.Windows.UI.IColorsStaticsMethods.get_PaleTurquoise(_objRef_global__Windows_UI_IColorsStatics);

        public static Color PaleVioletRed => global::ABI.Windows.UI.IColorsStaticsMethods.get_PaleVioletRed(_objRef_global__Windows_UI_IColorsStatics);

        public static Color PapayaWhip => global::ABI.Windows.UI.IColorsStaticsMethods.get_PapayaWhip(_objRef_global__Windows_UI_IColorsStatics);

        public static Color PeachPuff => global::ABI.Windows.UI.IColorsStaticsMethods.get_PeachPuff(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Peru => global::ABI.Windows.UI.IColorsStaticsMethods.get_Peru(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Pink => global::ABI.Windows.UI.IColorsStaticsMethods.get_Pink(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Plum => global::ABI.Windows.UI.IColorsStaticsMethods.get_Plum(_objRef_global__Windows_UI_IColorsStatics);

        public static Color PowderBlue => global::ABI.Windows.UI.IColorsStaticsMethods.get_PowderBlue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Purple => global::ABI.Windows.UI.IColorsStaticsMethods.get_Purple(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Red => global::ABI.Windows.UI.IColorsStaticsMethods.get_Red(_objRef_global__Windows_UI_IColorsStatics);

        public static Color RosyBrown => global::ABI.Windows.UI.IColorsStaticsMethods.get_RosyBrown(_objRef_global__Windows_UI_IColorsStatics);

        public static Color RoyalBlue => global::ABI.Windows.UI.IColorsStaticsMethods.get_RoyalBlue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color SaddleBrown => global::ABI.Windows.UI.IColorsStaticsMethods.get_SaddleBrown(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Salmon => global::ABI.Windows.UI.IColorsStaticsMethods.get_Salmon(_objRef_global__Windows_UI_IColorsStatics);

        public static Color SandyBrown => global::ABI.Windows.UI.IColorsStaticsMethods.get_SandyBrown(_objRef_global__Windows_UI_IColorsStatics);

        public static Color SeaGreen => global::ABI.Windows.UI.IColorsStaticsMethods.get_SeaGreen(_objRef_global__Windows_UI_IColorsStatics);

        public static Color SeaShell => global::ABI.Windows.UI.IColorsStaticsMethods.get_SeaShell(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Sienna => global::ABI.Windows.UI.IColorsStaticsMethods.get_Sienna(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Silver => global::ABI.Windows.UI.IColorsStaticsMethods.get_Silver(_objRef_global__Windows_UI_IColorsStatics);

        public static Color SkyBlue => global::ABI.Windows.UI.IColorsStaticsMethods.get_SkyBlue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color SlateBlue => global::ABI.Windows.UI.IColorsStaticsMethods.get_SlateBlue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color SlateGray => global::ABI.Windows.UI.IColorsStaticsMethods.get_SlateGray(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Snow => global::ABI.Windows.UI.IColorsStaticsMethods.get_Snow(_objRef_global__Windows_UI_IColorsStatics);

        public static Color SpringGreen => global::ABI.Windows.UI.IColorsStaticsMethods.get_SpringGreen(_objRef_global__Windows_UI_IColorsStatics);

        public static Color SteelBlue => global::ABI.Windows.UI.IColorsStaticsMethods.get_SteelBlue(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Tan => global::ABI.Windows.UI.IColorsStaticsMethods.get_Tan(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Teal => global::ABI.Windows.UI.IColorsStaticsMethods.get_Teal(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Thistle => global::ABI.Windows.UI.IColorsStaticsMethods.get_Thistle(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Tomato => global::ABI.Windows.UI.IColorsStaticsMethods.get_Tomato(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Transparent => global::ABI.Windows.UI.IColorsStaticsMethods.get_Transparent(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Turquoise => global::ABI.Windows.UI.IColorsStaticsMethods.get_Turquoise(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Violet => global::ABI.Windows.UI.IColorsStaticsMethods.get_Violet(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Wheat => global::ABI.Windows.UI.IColorsStaticsMethods.get_Wheat(_objRef_global__Windows_UI_IColorsStatics);

        public static Color White => global::ABI.Windows.UI.IColorsStaticsMethods.get_White(_objRef_global__Windows_UI_IColorsStatics);

        public static Color WhiteSmoke => global::ABI.Windows.UI.IColorsStaticsMethods.get_WhiteSmoke(_objRef_global__Windows_UI_IColorsStatics);

        public static Color Yellow => global::ABI.Windows.UI.IColorsStaticsMethods.get_Yellow(_objRef_global__Windows_UI_IColorsStatics);

        public static Color YellowGreen => global::ABI.Windows.UI.IColorsStaticsMethods.get_YellowGreen(_objRef_global__Windows_UI_IColorsStatics);

        public static Colors FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Colors>.FromAbi(thisPtr);
        }

        internal Colors(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(IColors).GetHelperType()));

        }

        public static bool operator ==(Colors x, Colors y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Colors x, Colors y) => !(x == y);
        public bool Equals(Colors other) => this == other;
        public override bool Equals(object obj) => obj is Colors that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("9B8C9326-4CA6-4CE5-8994-9EFF65CABDCC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.UI.IColors))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IColors
    {
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("CFF52E04-CCA6-4614-A17E-754910C84A99")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.UI.IColorsStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IColorsStatics
    {
        Color AliceBlue { get; }
        Color AntiqueWhite { get; }
        Color Aqua { get; }
        Color Aquamarine { get; }
        Color Azure { get; }
        Color Beige { get; }
        Color Bisque { get; }
        Color Black { get; }
        Color BlanchedAlmond { get; }
        Color Blue { get; }
        Color BlueViolet { get; }
        Color Brown { get; }
        Color BurlyWood { get; }
        Color CadetBlue { get; }
        Color Chartreuse { get; }
        Color Chocolate { get; }
        Color Coral { get; }
        Color CornflowerBlue { get; }
        Color Cornsilk { get; }
        Color Crimson { get; }
        Color Cyan { get; }
        Color DarkBlue { get; }
        Color DarkCyan { get; }
        Color DarkGoldenrod { get; }
        Color DarkGray { get; }
        Color DarkGreen { get; }
        Color DarkKhaki { get; }
        Color DarkMagenta { get; }
        Color DarkOliveGreen { get; }
        Color DarkOrange { get; }
        Color DarkOrchid { get; }
        Color DarkRed { get; }
        Color DarkSalmon { get; }
        Color DarkSeaGreen { get; }
        Color DarkSlateBlue { get; }
        Color DarkSlateGray { get; }
        Color DarkTurquoise { get; }
        Color DarkViolet { get; }
        Color DeepPink { get; }
        Color DeepSkyBlue { get; }
        Color DimGray { get; }
        Color DodgerBlue { get; }
        Color Firebrick { get; }
        Color FloralWhite { get; }
        Color ForestGreen { get; }
        Color Fuchsia { get; }
        Color Gainsboro { get; }
        Color GhostWhite { get; }
        Color Gold { get; }
        Color Goldenrod { get; }
        Color Gray { get; }
        Color Green { get; }
        Color GreenYellow { get; }
        Color Honeydew { get; }
        Color HotPink { get; }
        Color IndianRed { get; }
        Color Indigo { get; }
        Color Ivory { get; }
        Color Khaki { get; }
        Color Lavender { get; }
        Color LavenderBlush { get; }
        Color LawnGreen { get; }
        Color LemonChiffon { get; }
        Color LightBlue { get; }
        Color LightCoral { get; }
        Color LightCyan { get; }
        Color LightGoldenrodYellow { get; }
        Color LightGray { get; }
        Color LightGreen { get; }
        Color LightPink { get; }
        Color LightSalmon { get; }
        Color LightSeaGreen { get; }
        Color LightSkyBlue { get; }
        Color LightSlateGray { get; }
        Color LightSteelBlue { get; }
        Color LightYellow { get; }
        Color Lime { get; }
        Color LimeGreen { get; }
        Color Linen { get; }
        Color Magenta { get; }
        Color Maroon { get; }
        Color MediumAquamarine { get; }
        Color MediumBlue { get; }
        Color MediumOrchid { get; }
        Color MediumPurple { get; }
        Color MediumSeaGreen { get; }
        Color MediumSlateBlue { get; }
        Color MediumSpringGreen { get; }
        Color MediumTurquoise { get; }
        Color MediumVioletRed { get; }
        Color MidnightBlue { get; }
        Color MintCream { get; }
        Color MistyRose { get; }
        Color Moccasin { get; }
        Color NavajoWhite { get; }
        Color Navy { get; }
        Color OldLace { get; }
        Color Olive { get; }
        Color OliveDrab { get; }
        Color Orange { get; }
        Color OrangeRed { get; }
        Color Orchid { get; }
        Color PaleGoldenrod { get; }
        Color PaleGreen { get; }
        Color PaleTurquoise { get; }
        Color PaleVioletRed { get; }
        Color PapayaWhip { get; }
        Color PeachPuff { get; }
        Color Peru { get; }
        Color Pink { get; }
        Color Plum { get; }
        Color PowderBlue { get; }
        Color Purple { get; }
        Color Red { get; }
        Color RosyBrown { get; }
        Color RoyalBlue { get; }
        Color SaddleBrown { get; }
        Color Salmon { get; }
        Color SandyBrown { get; }
        Color SeaGreen { get; }
        Color SeaShell { get; }
        Color Sienna { get; }
        Color Silver { get; }
        Color SkyBlue { get; }
        Color SlateBlue { get; }
        Color SlateGray { get; }
        Color Snow { get; }
        Color SpringGreen { get; }
        Color SteelBlue { get; }
        Color Tan { get; }
        Color Teal { get; }
        Color Thistle { get; }
        Color Tomato { get; }
        Color Transparent { get; }
        Color Turquoise { get; }
        Color Violet { get; }
        Color Wheat { get; }
        Color White { get; }
        Color WhiteSmoke { get; }
        Color Yellow { get; }
        Color YellowGreen { get; }
    }
}

#pragma warning disable CA1416
namespace ABI.Windows.UI
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Colors
    {

        public static IObjectReference CreateMarshaler(global::Windows.UI.Colors obj) => obj is null ? null : MarshalInspectable<global::Windows.UI.Colors>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::Windows.UI.IColors).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.UI.Colors obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::Windows.UI.IColors).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.UI.Colors FromAbi(IntPtr thisPtr) => global::Windows.UI.Colors.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.UI.Colors obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.UI.Colors>.MarshalerArray CreateMarshalerArray(global::Windows.UI.Colors[] array) => MarshalInterfaceHelper<global::Windows.UI.Colors>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.UI.Colors>.GetAbiArray(box);
        public static unsafe global::Windows.UI.Colors[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.UI.Colors>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.UI.Colors[] array) => MarshalInterfaceHelper<global::Windows.UI.Colors>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.UI.Colors>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.UI.Colors>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    internal static class IColorsMethods
    {

    }
    [Guid("9B8C9326-4CA6-4CE5-8994-9EFF65CABDCC")]
    internal interface IColors : global::Windows.UI.IColors
    {
    }
    internal static class IColorsStaticsMethods
    {
        public static unsafe global::Windows.UI.Color get_AliceBlue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[6](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_AntiqueWhite(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[7](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Aqua(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[8](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Aquamarine(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[9](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Azure(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[10](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Beige(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[11](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Bisque(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[12](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Black(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[13](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_BlanchedAlmond(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[14](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Blue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[15](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_BlueViolet(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[16](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Brown(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[17](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_BurlyWood(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[18](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_CadetBlue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[19](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Chartreuse(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[20](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Chocolate(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[21](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Coral(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[22](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_CornflowerBlue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[23](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Cornsilk(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[24](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Crimson(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[25](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Cyan(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[26](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DarkBlue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[27](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DarkCyan(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[28](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DarkGoldenrod(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[29](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DarkGray(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[30](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DarkGreen(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[31](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DarkKhaki(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[32](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DarkMagenta(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[33](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DarkOliveGreen(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[34](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DarkOrange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[35](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DarkOrchid(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[36](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DarkRed(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[37](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DarkSalmon(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[38](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DarkSeaGreen(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[39](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DarkSlateBlue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[40](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DarkSlateGray(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[41](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DarkTurquoise(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[42](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DarkViolet(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[43](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DeepPink(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[44](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DeepSkyBlue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[45](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DimGray(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[46](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_DodgerBlue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[47](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Firebrick(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[48](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_FloralWhite(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[49](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_ForestGreen(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[50](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Fuchsia(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[51](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Gainsboro(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[52](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_GhostWhite(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[53](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Gold(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[54](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Goldenrod(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[55](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Gray(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[56](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Green(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[57](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_GreenYellow(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[58](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Honeydew(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[59](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_HotPink(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[60](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_IndianRed(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[61](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Indigo(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[62](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Ivory(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[63](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Khaki(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[64](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Lavender(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[65](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_LavenderBlush(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[66](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_LawnGreen(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[67](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_LemonChiffon(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[68](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_LightBlue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[69](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_LightCoral(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[70](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_LightCyan(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[71](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_LightGoldenrodYellow(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[72](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_LightGray(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[74](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_LightGreen(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[73](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_LightPink(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[75](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_LightSalmon(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[76](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_LightSeaGreen(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[77](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_LightSkyBlue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[78](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_LightSlateGray(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[79](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_LightSteelBlue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[80](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_LightYellow(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[81](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Lime(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[82](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_LimeGreen(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[83](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Linen(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[84](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Magenta(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[85](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Maroon(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[86](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_MediumAquamarine(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[87](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_MediumBlue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[88](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_MediumOrchid(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[89](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_MediumPurple(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[90](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_MediumSeaGreen(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[91](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_MediumSlateBlue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[92](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_MediumSpringGreen(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[93](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_MediumTurquoise(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[94](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_MediumVioletRed(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[95](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_MidnightBlue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[96](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_MintCream(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[97](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_MistyRose(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[98](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Moccasin(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[99](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_NavajoWhite(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[100](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Navy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[101](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_OldLace(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[102](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Olive(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[103](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_OliveDrab(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[104](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Orange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[105](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_OrangeRed(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[106](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Orchid(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[107](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_PaleGoldenrod(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[108](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_PaleGreen(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[109](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_PaleTurquoise(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[110](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_PaleVioletRed(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[111](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_PapayaWhip(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[112](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_PeachPuff(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[113](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Peru(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[114](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Pink(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[115](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Plum(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[116](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_PowderBlue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[117](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Purple(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[118](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Red(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[119](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_RosyBrown(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[120](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_RoyalBlue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[121](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_SaddleBrown(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[122](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Salmon(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[123](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_SandyBrown(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[124](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_SeaGreen(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[125](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_SeaShell(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[126](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Sienna(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[127](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Silver(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[128](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_SkyBlue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[129](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_SlateBlue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[130](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_SlateGray(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[131](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Snow(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[132](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_SpringGreen(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[133](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_SteelBlue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[134](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Tan(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[135](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Teal(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[136](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Thistle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[137](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Tomato(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[138](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Transparent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[139](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Turquoise(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[140](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Violet(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[141](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Wheat(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[142](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_White(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[143](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_WhiteSmoke(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[144](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_Yellow(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[145](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Windows.UI.Color get_YellowGreen(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.UI.Color __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Windows.UI.Color, int>**)ThisPtr)[146](ThisPtr, out __retval));
            return __retval;
        }


    }
    [Guid("CFF52E04-CCA6-4614-A17E-754910C84A99")]
    internal interface IColorsStatics : global::Windows.UI.IColorsStatics
    {
    }
}
